// Mixins


// Box-Sizing
// --------------------------------------------------

@mixin box-sizing($type: border-box) {
    -webkit-box-sizing: $type; /* Chrome 4-9, Safari 3.1-5, iOS 3.2-4.3, Android 2.1-3, BlackBerry 7 */
    -moz-box-sizing: $type; /* FireFox 2-28 */
    box-sizing: $type; /* W3C - Chrome 10+, Safari 5.1+, FF 29+, IE 8+, Opera 10.1+, iOS 5+, Android 4+, BlackBerry 10+ */
}

// Opacity
// --------------------------------------------------

@mixin opacity($opacity) {
    opacity: $opacity;
    // IE8 fix
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie);
}


// SVG Images
// --------------------------------------------------

@mixin svg-icons($image) {
    $svgPath: '/assets/images/icons/' + $image + '.svg';
    background-image: url($svgPath);
    background-repeat: no-repeat;
}


// Box-Shadow
// --------------------------------------------------

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $color; /* Chrome 4-9, Safari 3.1-5, iOS 3.2-4.3, Android 2.1-3, BlackBerry 7 */
        -moz-box-shadow: inset $top $left $blur $color; /* FireFox 3.5-3.6 */
        box-shadow: inset $top $left $blur $color; /* W3C - Chrome 10+, Safari 5.1+, FF 4+, IE 9+, Opera 11.5+, iOS 5+, Android 4+, BlackBerry 10+ */
    } @else {
        -webkit-box-shadow: $top $left $blur $color; /* Chrome 4-9, Safari 3.1-5, iOS 3.2-4.3, Android 2.1-3, BlackBerry 7 */
        -moz-box-shadow: $top $left $blur $color; /* FireFox 3.5-3.6 */
        box-shadow: $top $left $blur $color; /* W3C - Chrome 10+, Safari 5.1+, FF 4+, IE 9+, Opera 11.5+, iOS 5+, Android 4+, BlackBerry 10+ */
    }
}

@mixin box-shadow-defined($shadow) {
    -webkit-box-shadow: $shadow; /* Chrome 4-9, Safari 3.1-5, iOS 3.2-4.3, Android 2.1-3, BlackBerry 7 */
    -moz-box-shadow: $shadow; /* FireFox 3.5-3.6 */
    box-shadow: $shadow; /* W3C - Chrome 10+, Safari 5.1+, FF 4+, IE 9+, Opera 11.5+, iOS 5+, Android 4+, BlackBerry 10+ */
}


// Appearance
// --------------------------------------------------

@mixin appearance($val) {
    -webkit-appearance: $val;
    -moz-appearance: $val;
    appearance: $val;
}


// User Select
// --------------------------------------------------

@mixin user-select($selection) {
    -webkit-touch-callout: $selection; /* iOS Safari */
    -webkit-user-select: $selection; /* Safari */
    -khtml-user-select: $selection; /* Konqueror HTML */
    -moz-user-select: $selection; /* Old versions of Firefox */
    -ms-user-select: $selection; /* Internet Explorer/Edge */
    user-select: $selection; /* Chrome, Edge, Opera and Firefox */
}


// Object Fit
// --------------------------------------------------

/**
 * This mixin can be used to set the object-fit:
 * @include object-fit(contain);
 * or object-fit and object-position:
 * @include object-fit(cover, top);
 */
@mixin object-fit($fit: fill, $position: null) {
    -o-object-fit: $fit;
    object-fit: $fit;

    @if $position {
        -o-object-position: $position;
        object-position: $position;
        font-family: 'object-fit: #{$fit}; object-position: #{$position}';
    } @else {
        font-family: 'object-fit: #{$fit}';
    }
}


// Transitions
// --------------------------------------------------

@mixin transition($transition-property: all, $transition-time: 0.5s, $method: ease) {
    -webkit-transition: $transition-property $transition-time $method; /* Chrome 4-25, Safari 3.1-6, iOS 3.2-6.1, Android 2.1-4.3, BlackBerry 7 */
    -moz-transition: $transition-property $transition-time $method; /* FireFox 4-15 */
    -o-transition: $transition-property $transition-time $method;/* Opera    10.5-11.5 */
    transition: $transition-property $transition-time $method; /* W3C - Chrome 26+, Safari 6.1+, FF 16+, IE 10+, Opera 12.1+, iOS 7+, Android 4.4+, BlackBerry 10+ */
}


// Transformations
// --------------------------------------------------

@mixin transform($transform-property) {
    -webkit-transform: $transform-property; /* Chrome 4-35, Safari 3.2-8, Opera 12.1-22, iOS 3.2-8.4, Android 2.1-4.4.4, BlackBerry 7-10 */
    -moz-transform: $transform-property; /* FireFox 3.5-15 */
    -ms-transform: $transform-property; /* IE 9 */
    -o-transform: $transform-property; /* Opera 10.5-11.5 */
    transform: $transform-property; /* W3C - Chrome 36+, Safari 9+, FF 16+, IE 10+, Opera 23+, iOS 9+, Android 5+ */
}

@mixin rotate($degrees) {
    @include transform( rotate($degrees) );
}


// Flexbox
// --------------------------------------------------

@mixin flexbox {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}

@mixin inline-flex {
    display: -webkit-inline-box;
    display: -moz-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
}

@mixin flex-direction($value: row) {
    @if $value==row-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: horizontal;
        -moz-box-direction: reverse;
        -moz-box-orient: horizontal;
    }

    @else if $value==column {
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;
        -moz-box-direction: normal;
        -moz-box-orient: vertical;
    }

    @else if $value==column-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
        -moz-box-direction: reverse;
        -moz-box-orient: vertical;
    }

    @else {
        -webkit-box-direction: normal;
        -webkit-box-orient: horizontal;
        -moz-box-direction: normal;
        -moz-box-orient: horizontal;
    }

    -webkit-flex-direction: $value;
    -ms-flex-direction: $value;
    flex-direction: $value;
}

@mixin flex-wrap($value: nowrap) {
    // No Webkit/FF Box fallback.
    -webkit-flex-wrap: $value;

    @if $value==nowrap {
        -ms-flex-wrap: none;
    }

    @else {
        -ms-flex-wrap: $value;
    }

    flex-wrap: $value;
}

@mixin flex-flow($values: (row nowrap)) {
    // No Webkit/FF Box fallback.
    -webkit-flex-flow: $values;
    -ms-flex-flow: $values;
    flex-flow: $values;
}

@mixin order($int: 0) {
    -webkit-box-ordinal-group: $int + 1;
    -moz-box-ordinal-group: $int + 1;
    -webkit-order: $int;
    -ms-flex-order: $int;
    order: $int;
}

@mixin flex-grow($int: 1) {
    -webkit-box-flex: $int;
    -moz-box-flex: $int;
    -webkit-flex-grow: $int;
    -ms-flex: $int;
    flex-grow: $int;
}

@mixin flex-shrink($int: 0) {
    -webkit-flex-shrink: $int;
    -moz-flex-shrink: $int;
    -ms-flex: $int;
    flex-shrink: $int;
}

@mixin flex-basis($value: auto) {
    -webkit-flex-basis: $value;
    flex-basis: $value;
}

@mixin flex($fg: 1, $fs: 0, $fb: auto) {
    // Set a variable to be used by box-flex properties
    $fg-boxflex: $fg;

    // Box-Flex only supports a flex-grow value so lets grab the
    // first item in the list and just return that.
    @if type-of($fg)=='list' {
        $fg-boxflex: nth($fg, 1);
    }

    -webkit-box: $fg-boxflex;
    -moz-box: $fg-boxflex;
    -webkit-flex: $fg $fs $fb;
    -ms-flex: $fg $fs $fb;
    flex: $fg $fs $fb;
}

@mixin justify-content($value: flex-start) {
    @if $value==flex-start {
        -webkit-box-pack: start;
        -moz-box-pack: start;
        -ms-flex-pack: start;
    }

    @else if $value==flex-end {
        -webkit-box-pack: end;
        -moz-box-pack: end;
        -ms-flex-pack: end;
    }

    @else if $value==space-between {
        -webkit-box-pack: justify;
        -moz-box-pack: justify;
        -ms-flex-pack: justify;
    }

    @else if $value==space-around {
        -ms-flex-pack: distribute;
    }

    @else {
        -webkit-box-pack: $value;
        -moz-box-pack: $value;
        -ms-flex-pack: $value;
    }

    -webkit-justify-content: $value;
    justify-content: $value;
}

@mixin align-items($value: stretch) {
    @if $value==flex-start {
        -webkit-box-align: start;
        -moz-box-align: start;
        -ms-flex-align: start;
    }

    @else if $value==flex-end {
        -webkit-box-align: end;
        -moz-box-align: end;
        -ms-flex-align: end;
    }

    @else {
        -webkit-box-align: $value;
        -moz-box-align: $value;
        -ms-flex-align: $value;
    }

    -webkit-align-items: $value;
    align-items: $value;
}

@mixin align-self($value: auto) {
    // No Webkit Box Fallback.
    -webkit-align-self: $value;

    @if $value==flex-start {
        -ms-flex-item-align: start;
    }

    @else if $value==flex-end {
        -ms-flex-item-align: end;
    }

    @else {
        -ms-flex-item-align: $value;
    }

    align-self: $value;
}

@mixin align-content($value: stretch) {
    // No Webkit Box Fallback.
    -webkit-align-content: $value;

    @if $value==flex-start {
        -ms-flex-line-pack: start;
    }

    @else if $value==flex-end {
        -ms-flex-line-pack: end;
    }

    @else {
        -ms-flex-line-pack: $value;
    }

    align-content: $value;
}